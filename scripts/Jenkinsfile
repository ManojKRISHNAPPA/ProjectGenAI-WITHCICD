pipeline {
    agent any

    environment {
        AWS_REGION = "us-west-2"
        IMAGE_NAME = "manojkrishnappa/md-genai:${GIT_COMMIT}"
        CLUSTER_NAME = "microdegree-cluster"
        NAMESPACE = "microdegree"
        DEPLOYMENT_NAME = "md-genai"
        SERVICE_NAME = "md-genai-service"
    }

    stages {
        stage('git checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/ManojKRISHNAPPA/ProjectGenAI-WITHCICD.git'
            }
        }

        stage('Docker build and Tag') {
            steps {
                dir('Rag-Application') {
                    sh '''
                        pwd
                        printenv
                        docker build -t ${IMAGE_NAME} .
                    '''
                }
            }
        }

        stage('Docker Image Scan') {
            steps {
                script {
                    sh 'trivy image --format table -o trivy-image-report.html ${IMAGE_NAME}'
                    archiveArtifacts artifacts: 'trivy-image-report.html', fingerprint: true
                }
            }
        }

        stage('Login to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh "echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin"
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                sh 'docker push ${IMAGE_NAME}'
            }
        }

        stage('Update EKS Config') {
            steps {
                sh "aws eks update-kubeconfig --region ${AWS_REGION} --name ${CLUSTER_NAME}"
            }
        }

        stage('Deploy to EKS') {
            steps {
                withKubeConfig(
                    caCertificate: '',
                    clusterName: "${CLUSTER_NAME}",
                    contextName: '',
                    credentialsId: 'kube',
                    namespace: "${NAMESPACE}",
                    restrictKubeConfigAccess: false,
                    serverUrl: 'https://74209E26C70B348EC102C0F4F7C90F08.sk1.us-west-2.eks.amazonaws.com'
                ) {
                    dir('Rag-Application') {
                        sh "sed -i 's|replace|${IMAGE_NAME}|g' deployment.yaml"
                        sh "kubectl apply -f deployment.yaml -n ${NAMESPACE}"
                        sh "kubectl rollout status deployment/${DEPLOYMENT_NAME} -n ${NAMESPACE}"
                    }
                }
            }
        }

        stage('Verify Deployment') {
            steps {
                withKubeConfig(
                    caCertificate: '',
                    clusterName: "${CLUSTER_NAME}",
                    contextName: '',
                    credentialsId: 'kube',
                    namespace: "${NAMESPACE}",
                    restrictKubeConfigAccess: false,
                    serverUrl: 'https://74209E26C70B348EC102C0F4F7C90F08.sk1.us-west-2.eks.amazonaws.com'
                ) {
                    sh "kubectl get deployment -n ${NAMESPACE}"
                    sh "kubectl get pods -n ${NAMESPACE}"
                    sh "kubectl get svc -n ${NAMESPACE}"
                }
            }
        }
    }
}
